package kr.or.ddit.basic;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


/*
 * 
 * - 서블릿의 동작 방식에 대하여...
 * 1. 사용자(클라이언트)가 URL을 클릭하면 HTTP Request를 Servlet Container로 전송(요청)한다.
 * 2. 컨테이너는 web.xml에 정의된 url패턴을 확인하여 어느 서블릿을 통해서 처리해야 할 지를 검색한다.
 * 		(로딩이 안된 경우에는 로딩을 한다. 이때 init() 메서드가 호출된다.)
 * 		(Servlet버전 3.0이상에서는 애노테이션(@WebServlet)으로 url패턴을 설정할 수 있다.)
 * 3. Servlet Container는 요청을 처리할 개별 쓰레드 객체를 생성하여 해당 서블릿 객체의 
 * 		service()메서드를 호출한다.
 * 		(이때, HttpServletRequest객체와 HttpServletResponse객체를 파라미터로 넘겨준다.)
 * 4. service()메서드는 요청 메서드 타입을 체크하여 적절한 메서드를 호출한다.
 * 		(doGet(), doPost(), doPut(), doDelete() 등...)
 * 5. 요청 처리가 완료되면 
 * 
 */




@WebServlet(urlPatterns= {"/servletTest02.do"})
public class ServletTest03 extends HttpServlet{

	private static final long serialVersionUID = 1L;
	
	@Override
	public void init() throws ServletException {
	}
	
	@Override
	protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
	}
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
	}
	
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
	}
	
	@Override
	public void destroy() {
	}

}
